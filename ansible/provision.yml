---
- hosts: web
  name: configuration play
  user: ubuntu
  environment: 
    LC_ALL: C 
    LANG: C
    FLASK_APP: web.py 

  gather_facts: false 
  pre_tasks:
    - name: Install python for Ansible
      become: true
      raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal)
      changed_when: false
    - setup: # aka gather_facts

  tasks:

    - name: Install nginx
      become: true
      apt:
        name: nginx
        update_cache: true

    - name: Copy a new "nginx.conf file into place, backing up the original if it differs from the copied version
      become: true
      copy:
        src: files/nginx.config
        dest: /etc/nginx/sites-available/default
        owner: root
        group: root
        mode: 0644
        backup: yes        

    - name: Install tools
      become: true
      apt:
        name: "{{item}}"
      with_items:
        - git
        - python3-pip
        - language-pack-id
        - build-essential
        - python3-dev
        - libssl-dev
        - libffi-dev

    - name: Ensure a locale exists
      become: true
      locale_gen:
        name: en_US.UTF-8
        state: present

    - name: download code
      git:
        repo: 'https://gitlab.com/techlunacy/aws-s3-analysis.git'
        dest: "/home/{{ansible_user}}/checkout"
        version: master
        force: yes

    - name: Installing python libraries using requirements file in Ansible
      pip:
        requirements: requirements.txt
        state: forcereinstall
        chdir: "/home/{{ansible_user}}/checkout"
        executable: pip3      
  
    - name: Copy a new "upstart conf file into place, backing up the original if it differs from the copied version
      become: true
      copy:
        src: files/service.config
        dest: /etc/systemd/system/awsanalysis.service
        owner: root
        group: root
        mode: 0644
        backup: yes

    - name: Restart service awsanalysis, in all cases
      become: true
      service:
        name: awsanalysis
        state: restarted

    - name: Reload service nginx, in all cases
      become: true
      service:
        name: nginx
        state: reloaded        

        